// Copyright 2024 Authors of elf-io
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	context "context"

	topohubinfrastructureiov1beta1 "github.com/infrastructure-io/topohub/pkg/k8s/apis/topohub.infrastructure.io/v1beta1"
	scheme "github.com/infrastructure-io/topohub/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// HostEndpointsGetter has a method to return a HostEndpointInterface.
// A group's client should implement this interface.
type HostEndpointsGetter interface {
	HostEndpoints() HostEndpointInterface
}

// HostEndpointInterface has methods to work with HostEndpoint resources.
type HostEndpointInterface interface {
	Create(ctx context.Context, hostEndpoint *topohubinfrastructureiov1beta1.HostEndpoint, opts v1.CreateOptions) (*topohubinfrastructureiov1beta1.HostEndpoint, error)
	Update(ctx context.Context, hostEndpoint *topohubinfrastructureiov1beta1.HostEndpoint, opts v1.UpdateOptions) (*topohubinfrastructureiov1beta1.HostEndpoint, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*topohubinfrastructureiov1beta1.HostEndpoint, error)
	List(ctx context.Context, opts v1.ListOptions) (*topohubinfrastructureiov1beta1.HostEndpointList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *topohubinfrastructureiov1beta1.HostEndpoint, err error)
	HostEndpointExpansion
}

// hostEndpoints implements HostEndpointInterface
type hostEndpoints struct {
	*gentype.ClientWithList[*topohubinfrastructureiov1beta1.HostEndpoint, *topohubinfrastructureiov1beta1.HostEndpointList]
}

// newHostEndpoints returns a HostEndpoints
func newHostEndpoints(c *TopohubV1beta1Client) *hostEndpoints {
	return &hostEndpoints{
		gentype.NewClientWithList[*topohubinfrastructureiov1beta1.HostEndpoint, *topohubinfrastructureiov1beta1.HostEndpointList](
			"hostendpoints",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *topohubinfrastructureiov1beta1.HostEndpoint {
				return &topohubinfrastructureiov1beta1.HostEndpoint{}
			},
			func() *topohubinfrastructureiov1beta1.HostEndpointList {
				return &topohubinfrastructureiov1beta1.HostEndpointList{}
			},
		),
	}
}
